server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: true
  endpoint:
    health:
      show-details: always

spring:
  application:
    name: bookingService


resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      #recordExceptions:
      #  - org.springframework.web.client.HttpServerErrorException
      #  - java.util.concurrent.TimeoutException
      #  - java.io.IOException
      #ignoreExceptions:
      #  - com.bookingservice.bookingservice.exception.BusinessException
    shared:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
  instances:
    customerService:
      baseConfig: default
    ticketingService:
      eventConsumerBufferSize: 10

resilience4j.retry:
  instances:
    customerService:
      maxAttempts: 2
      waitDuration: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
    ticketingService:
      maxAttempts: 2
      waitDuration: 5s

resilience4j.bulkhead:
  instances:
    customerService:
      maxConcurrentCalls: 20
      maxWaitDuration: 5ms
    ticketingService:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 10

resilience4j.ratelimiter:
  instances:
    ticketingService:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s

resilience4j.timelimiter:
  instances:
    customerService:
      timeoutDuration: 2s
      cancelRunningFuture: true
    ticketingService:
      timeoutDuration: 1s
      cancelRunningFuture: true
